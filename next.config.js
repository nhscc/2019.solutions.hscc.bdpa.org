"use strict";

var _nextTranspileModules = _interopRequireDefault(require("next-transpile-modules"));

var _bundleAnalyzer = _interopRequireDefault(require("@next/bundle-analyzer"));

var _path = require("path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

require('./src/dev-utils').populateEnv();

const paths = {
  universe: `${__dirname}/src/`,
  multiverse: `${__dirname}/lib/`,
  components: `${__dirname}/src/components/`,
  rbc: `${__dirname}/node_modules/react-bulma-components/src/components`
};
const withTM = (0, _nextTranspileModules.default)(['react-bulma-components']);

module.exports = () => {
  return (0, _bundleAnalyzer.default)({
    enabled: process.env.ANALYZE === 'true'
  })(withTM({
    distDir: 'build',
    sassOptions: {
      includePaths: [(0, _path.join)(__dirname, '/src')]
    },
    webpack: config => {
      config.resolve && (config.resolve.alias = { ...config.resolve.alias,
        universe: paths.universe,
        multiverse: paths.multiverse,
        components: paths.components,
        rbc: paths.rbc
      });
      return config;
    },
    env: {},
    experimental: {
      async rewrites() {
        return [];
      }

    }
  }));
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy9uZXh0LmNvbmZpZy50cyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwicG9wdWxhdGVFbnYiLCJwYXRocyIsInVuaXZlcnNlIiwiX19kaXJuYW1lIiwibXVsdGl2ZXJzZSIsImNvbXBvbmVudHMiLCJyYmMiLCJ3aXRoVE0iLCJtb2R1bGUiLCJleHBvcnRzIiwiZW5hYmxlZCIsInByb2Nlc3MiLCJlbnYiLCJBTkFMWVpFIiwiZGlzdERpciIsInNhc3NPcHRpb25zIiwiaW5jbHVkZVBhdGhzIiwid2VicGFjayIsImNvbmZpZyIsInJlc29sdmUiLCJhbGlhcyIsImV4cGVyaW1lbnRhbCIsInJld3JpdGVzIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOzs7O0FBT0FBLE9BQU8sQ0FBQyxpQkFBRCxDQUFQLENBQTJCQyxXQUEzQjs7QUFFQSxNQUFNQyxLQUFLLEdBQUc7QUFDVkMsRUFBQUEsUUFBUSxFQUFHLEdBQUVDLFNBQVUsT0FEYjtBQUVWQyxFQUFBQSxVQUFVLEVBQUcsR0FBRUQsU0FBVSxPQUZmO0FBSVZFLEVBQUFBLFVBQVUsRUFBRyxHQUFFRixTQUFVLGtCQUpmO0FBS1ZHLEVBQUFBLEdBQUcsRUFBRyxHQUFFSCxTQUFVO0FBTFIsQ0FBZDtBQVNBLE1BQU1JLE1BQU0sR0FBRyxtQ0FBa0IsQ0FBQyx3QkFBRCxDQUFsQixDQUFmOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsTUFBTTtBQUNuQixTQUFPLDZCQUFtQjtBQUN0QkMsSUFBQUEsT0FBTyxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsT0FBWixLQUF3QjtBQURYLEdBQW5CLEVBRUpOLE1BQU0sQ0FBQztBQUVOTyxJQUFBQSxPQUFPLEVBQUUsT0FGSDtBQUlOQyxJQUFBQSxXQUFXLEVBQUU7QUFBRUMsTUFBQUEsWUFBWSxFQUFFLENBQUUsZ0JBQVNiLFNBQVQsRUFBb0IsTUFBcEIsQ0FBRjtBQUFoQixLQUpQO0FBU05jLElBQUFBLE9BQU8sRUFBR0MsTUFBRCxJQUEyQjtBQUloQ0EsTUFBQUEsTUFBTSxDQUFDQyxPQUFQLEtBQW1CRCxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsS0FBZixHQUF1QixFQUN0QyxHQUFHRixNQUFNLENBQUNDLE9BQVAsQ0FBZUMsS0FEb0I7QUFFdENsQixRQUFBQSxRQUFRLEVBQUVELEtBQUssQ0FBQ0MsUUFGc0I7QUFHdENFLFFBQUFBLFVBQVUsRUFBRUgsS0FBSyxDQUFDRyxVQUhvQjtBQUt0Q0MsUUFBQUEsVUFBVSxFQUFFSixLQUFLLENBQUNJLFVBTG9CO0FBTXRDQyxRQUFBQSxHQUFHLEVBQUVMLEtBQUssQ0FBQ0s7QUFOMkIsT0FBMUM7QUFTQSxhQUFPWSxNQUFQO0FBQ0gsS0F2Qks7QUE0Qk5OLElBQUFBLEdBQUcsRUFBRSxFQTVCQztBQWdDTlMsSUFBQUEsWUFBWSxFQUFFO0FBQ1YsWUFBTUMsUUFBTixHQUFpQjtBQUNiLGVBQU8sRUFBUDtBQU1IOztBQVJTO0FBaENSLEdBQUQsQ0FGRixDQUFQO0FBNkNILENBOUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHdpdGhUTUluaXRpYWxpemVyIGZyb20gJ25leHQtdHJhbnNwaWxlLW1vZHVsZXMnXG5pbXBvcnQgd2l0aEJ1bmRsZUFuYWx5emVyIGZyb20gJ0BuZXh0L2J1bmRsZS1hbmFseXplcidcbmltcG9ydCB7IGpvaW4gYXMgcGF0aEpvaW4gfSBmcm9tICdwYXRoJ1xuXG5pbXBvcnQgdHlwZSB7IENvbmZpZ3VyYXRpb24gfSBmcm9tICd3ZWJwYWNrJ1xuXG4vLyA/IE5vdCB1c2luZyBFUzYvVFMgaW1wb3J0IHN5bnRheCBoZXJlIGJlY2F1c2UgZGV2LXV0aWxzIGhhcyBzcGVjaWFsXG4vLyA/IGNpcmN1bXN0YW5jZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpbXBvcnQvbm8tdW5yZXNvbHZlZCwgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xucmVxdWlyZSgnLi9zcmMvZGV2LXV0aWxzJykucG9wdWxhdGVFbnYoKTtcblxuY29uc3QgcGF0aHMgPSB7XG4gICAgdW5pdmVyc2U6IGAke19fZGlybmFtZX0vc3JjL2AsXG4gICAgbXVsdGl2ZXJzZTogYCR7X19kaXJuYW1lfS9saWIvYCxcbiAgICAvLyB0eXBlcy8gaXMgcHVycG9zZWx5IGV4Y2x1ZGVkXG4gICAgY29tcG9uZW50czogYCR7X19kaXJuYW1lfS9zcmMvY29tcG9uZW50cy9gLFxuICAgIHJiYzogYCR7X19kaXJuYW1lfS9ub2RlX21vZHVsZXMvcmVhY3QtYnVsbWEtY29tcG9uZW50cy9zcmMvY29tcG9uZW50c2Bcbn07XG5cbi8vID8gTWFrZSBCdWxtYSB3b3JrIChpdCBuZWVkcyB0byBiZSB0cmFuc3BpbGVkKVxuY29uc3Qgd2l0aFRNID0gd2l0aFRNSW5pdGlhbGl6ZXIoWydyZWFjdC1idWxtYS1jb21wb25lbnRzJ10pO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICgpID0+IHtcbiAgICByZXR1cm4gd2l0aEJ1bmRsZUFuYWx5emVyKHtcbiAgICAgICAgZW5hYmxlZDogcHJvY2Vzcy5lbnYuQU5BTFlaRSA9PT0gJ3RydWUnXG4gICAgfSkod2l0aFRNKHtcbiAgICAgICAgLy8gPyBSZW5hbWVzIHRoZSBidWlsZCBkaXIgXCJidWlsZFwiIGluc3RlYWQgb2YgXCIubmV4dFwiXG4gICAgICAgIGRpc3REaXI6ICdidWlsZCcsXG5cbiAgICAgICAgc2Fzc09wdGlvbnM6IHsgaW5jbHVkZVBhdGhzOiBbIHBhdGhKb2luKF9fZGlybmFtZSwgJy9zcmMnKSBdfSxcblxuICAgICAgICAvLyA/IFdlYnBhY2sgY29uZmlndXJhdGlvblxuICAgICAgICAvLyAhIE5vdGUgdGhhdCB0aGUgd2VicGFjayBjb25maWd1cmF0aW9uIGlzIGV4ZWN1dGVkIHR3aWNlOiBvbmNlXG4gICAgICAgIC8vICEgc2VydmVyLXNpZGUgYW5kIG9uY2UgY2xpZW50LXNpZGUhXG4gICAgICAgIHdlYnBhY2s6IChjb25maWc6IENvbmZpZ3VyYXRpb24pID0+IHtcbiAgICAgICAgICAgIC8vID8gVGhlc2UgYXJlIGFsaWFzZXMgdGhhdCBjYW4gYmUgdXNlZCBkdXJpbmcgSlMgaW1wb3J0IGNhbGxzXG4gICAgICAgICAgICAvLyAhIE5vdGUgdGhhdCB5b3UgbXVzdCBhbHNvIGNoYW5nZSB0aGVzZSBzYW1lIGFsaWFzZXMgaW4gdHNjb25maWcuanNvblxuICAgICAgICAgICAgLy8gISBOb3RlIHRoYXQgeW91IG11c3QgYWxzbyBjaGFuZ2UgdGhlc2Ugc2FtZSBhbGlhc2VzIGluIHBhY2thZ2UuanNvbiAoamVzdClcbiAgICAgICAgICAgIGNvbmZpZy5yZXNvbHZlICYmIChjb25maWcucmVzb2x2ZS5hbGlhcyA9IHtcbiAgICAgICAgICAgICAgICAuLi5jb25maWcucmVzb2x2ZS5hbGlhcyxcbiAgICAgICAgICAgICAgICB1bml2ZXJzZTogcGF0aHMudW5pdmVyc2UsXG4gICAgICAgICAgICAgICAgbXVsdGl2ZXJzZTogcGF0aHMubXVsdGl2ZXJzZSxcbiAgICAgICAgICAgICAgICAvLyB0eXBlcy8gaXMgcHVycG9zZWx5IGV4Y2x1ZGVkXG4gICAgICAgICAgICAgICAgY29tcG9uZW50czogcGF0aHMuY29tcG9uZW50cyxcbiAgICAgICAgICAgICAgICByYmM6IHBhdGhzLnJiYyxcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm4gY29uZmlnO1xuICAgICAgICB9LFxuXG4gICAgICAgIC8vID8gU2VsZWN0IHNvbWUgZW52aXJvbm1lbnQgdmFyaWFibGVzIGRlZmluZWQgaW4gLmVudiB0byBwdXNoIHRvIHRoZVxuICAgICAgICAvLyA/IGNsaWVudC5cbiAgICAgICAgLy8gISEgRE8gTk9UIFBVVCBBTlkgU0VDUkVUIEVOVklST05NRU5UIFZBUklBQkxFUyBIRVJFICEhXG4gICAgICAgIGVudjoge30sXG5cbiAgICAgICAgLy8gVE9ETzogbW92ZSB0aGVzZSBvdXQgb2YgZXhwZXJpbWVudGFsIHdoZW4gdGhleSdyZSBub3QgZXhwZXJpbWVudGFsXG4gICAgICAgIC8vIFRPRE86IGFueW1vcmUhXG4gICAgICAgIGV4cGVyaW1lbnRhbDoge1xuICAgICAgICAgICAgYXN5bmMgcmV3cml0ZXMoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgICAgICAvLyAgICAgc291cmNlOiAnL3gnLFxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgZGVzdGluYXRpb246ICcveSdcbiAgICAgICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KSk7XG59O1xuIl19